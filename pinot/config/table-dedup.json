{
    "tableName":"events_dedup",
    "tableType":"REALTIME",
    "segmentsConfig":{
      "timeColumnName":"ts",
      "schemaName":"events_dedup",
      "replication":"1",
      "replicasPerPartition":"1"
    },
    "tableIndexConfig":{
      "loadMode":"MMAP",
      "streamConfigs":{
        "streamType":"kafka",
        "stream.kafka.topic.name":"events",
        "stream.kafka.broker.list":"kafka-deep-dive:9093",
        "stream.kafka.consumer.type":"lowlevel",
        "stream.kafka.consumer.prop.auto.offset.reset":"smallest",
        "stream.kafka.consumer.factory.class.name":"org.apache.pinot.plugin.stream.kafka20.KafkaConsumerFactory",
        "stream.kafka.decoder.class.name":"org.apache.pinot.plugin.stream.kafka.KafkaJSONMessageDecoder",
        "realtime.segment.flush.threshold.rows":"0",
        "realtime.segment.flush.threshold.time":"1h",
        "realtime.segment.flush.threshold.segment.size":"5M"
      }
    },
    "dedupConfig": {
      "dedupEnabled": true,
      "hashFunction": "NONE"
    },
    "routing": {
      "instanceSelectorType": "strictReplicaGroup"
    },
    "fieldConfigList": [
        {
          "name": "ts",
          "encodingType": "DICTIONARY",
          "indexTypes": ["TIMESTAMP"],
          "timestampConfig": {
            "granularities": [
              "MINUTE", "SECOND"
            ]
          }
        }
      ],
    "ingestionConfig":{
      "transformConfigs": [
        {
            "columnName": "ts",
            "transformFunction": "FromDateTime(eventTime, 'YYYY-MM-dd''T''HH:mm:ss.SSSSSS')"
        },
        {
          "columnName": "location",
          "transformFunction": "toSphericalGeography(stPoint(lng,lat))"
      }
      ]
    },
    "tenants":{
      
    },
    "metadata":{
      
    }
  }